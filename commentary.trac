= The GHC Commentary =

This tree of wiki pages is a "commentary" on the GHC source code.  It contains all the explanatory material that doesn't belong in comments in the source code itself, because the material is wide-ranging, usually covers multiple source files, and is more architectural in nature.  The commentary can also be considered a design document for GHC.

Please feel free to add maaterial to this commentary: don't worry too much about accuracy, in due course someone will edit your contribution.  Try to link to source files as much as possible by using this macro: {{{[[GhcFile(compiler/Makefile)]]}}} (the usual Trac {{{source:}}} macro doesn't work here because the GHC darcs repository isn't integrated into this Trac).  Also try to add appropriate links to other parts of the commentary.

== Contents ==

 * [wiki:Commentary/Organisation The overall organisation of GHC]
 * [wiki:Commentary/SourceTree Source Tree Roadmap]
 * [wiki:Commentary/Pipeline The compilation pipeline]

 * [wiki:Commentary/Compiler The Compiler]
   * [wiki:Commentary/Compiler Organisation]: high-level structure
   * [wiki:ModuleDependencies Compiler Module Dependencies]
   * [wiki:Commentary/Compiler/HscMain Compiling one module: HscMain]
   * Key data types:
     * Source-language syntax: [wiki:Commentary/Compiler/HsSynType HsSyn]
     * Names: [wiki:Commentary/Compiler/RdrNameType RdrName and OccName], [wiki:Commentary/Compiler/NameType Name]
     * [wiki:Commentary/Compiler/EntityTypes Entities]: variables, type constructors, data constructors, and classes.
     * Types: [wiki:Commentary/Compiler/TypeType Type and Kind], [wiki:Commentary/Compiler/FC equality types and coercions].
     * [wiki:Commentary/Compiler/CoreSynType The core language].
     * Cmm.
   * Passes:
     * [wiki:Commentary/Compiler/Renamer Renamer]
     * Typechecker
     * Desugarer
     * Core->core
   * SPJ ModIface, ModDetails, ModGuts
   * SPJ Core->CorePrep->Stg->Cmm
   * [wiki:Commentary/PrimOps Primitive Operations (PrimOps)]
   * [wiki:Commentary/Compiler/API The GHC API]
   * SM HscMain upwards: ModSummary, Finder, upsweep, downsweep,
   * [wiki:Commentary/CodingStyle Coding guidelines]

 * [wiki:Commentary/Rts The Runtime System]
   * [wiki:Commentary/Rts/Config RTS Configurations]
   * [wiki:Commentary/Rts/Word The Word]
   * [wiki:Commentary/Rts/Cmm What the hell is a {{{.cmm}}} file?]
   * [wiki:Commentary/Rts/HeapObjects Layout of heap objects]
   * [wiki:Commentary/Rts/Stack Layout of the stack]
   * [wiki:Commentary/Rts/HaskellExecution Haskell Execution]
   * [wiki:Commentary/Rts/Scheduler The Scheduler]
   * [wiki:Commentary/Rts/Storage The Storage Manager]
   * [wiki:Commentary/Rts/FFI So how does {{{foreign import "wrapper"}}} work?]
   * [wiki:Commentary/Rts/Interpreter GHCi support: the byte-code interpreter and dynamic linker]
   * [wiki:Commentary/Rts/AsyncExceptions Asynchronous exceptions]
   * [wiki:Commentary/Rts/STM Software Transactional Memory (STM)]
   * [wiki:Commentary/Rts/CAFs Garbage Collecting CAFs]
   * [wiki:Commentary/Rts/Weak Weak Pointers and Finalizers]
   * [wiki:Commentary/Rts/Conventions Coding conventions in the RTS]