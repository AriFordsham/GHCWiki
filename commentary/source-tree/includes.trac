= GHC Source Tree Roadmap: includes/ =

This directory contains C header files that are included in a GHC distribution.  We classify header files into 4 categories.

== External APIs ==

These are header files that define an external API to the RTS that can
be used by client code.  These interfaces are intended to be
relatively stable:

 [http://darcs.haskell.org/includes/HsFFI.h HsFFI.h]::
  The external FFI api
 [http://darcs.haskell.org/includes/RtsAPI.h RtsAPI.h]::
  The top-level interface to the RTS ({{{rts_evalIO()}}}, etc.)
 [http://darcs.haskell.org/includes/SchedAPI.h SchedAPI.h]::
  External API to the RTS scheduler
 [http://darcs.haskell.org/includes/RtsFlags.h RtsFlags.h]::
  External API to the RTS runtime flags
 [http://darcs.haskell.org/includes/Linker.h Linker.h]::
  External API to the linker

== Used when compiling via C ==

These header files are {{{#included}}} into the {{{.hc}}} file
generated by GHC when it compiles Haskell code to C.  

These days the amount of stuff included this way is kept to a minimum,
because we don't want to pollute the C namespace with too much
extraneous goop.

 [http://darcs.haskell.org/includes/Stg.h Stg.h]::
  The top of the hierarchy is {{{Stg.h}}}, which includes everything required by
  {{{.hc}}} code.  The following files are {{{#included}}} by {{{Stg.h}}}:

 [http://darcs.haskell.org/includes/ghcconfig.h ghcconfig.h]::
  Configuration info derived by the {{{configure}}} script.
 [http://darcs.haskell.org/includes/RtsConfig.h RtsConfig.h]::
  Settings for Rts configurables (eg. eager vs. lazy BH)
 [http://darcs.haskell.org/includes/MachDeps.h MachDeps.h]::
  Sizes of various basic types.
 [http://darcs.haskell.org/includes/StgTypes.h StgTypes.h]::
  Basic types specific to the virtual machine (eg. {{{StgWord}}}).
 [http://darcs.haskell.org/includes/TailCalls.h TailCalls.h]::
  Tail calls in {{{.hc}}} code.
 [http://darcs.haskell.org/includes/StgDLL.h StgDLL.h]::
  Stuff related to Windows DLLs.
 [http://darcs.haskell.org/includes/MachRegs.h MachRegs.h]::
  Global register assignments for this processor.
 [http://darcs.haskell.org/includes/Regs.h Regs.h]::
  "registers" in the virtual machine.
 [http://darcs.haskell.org/includes/StgProf.h StgProf.h]::
  Profiling gubbins.
 [http://darcs.haskell.org/includes/StgMiscClosures.h StgMiscClosures.h]::
  Declarations for closures & info tables built-in to the RTS
 [http://darcs.haskell.org/includes/RtsExternal.h RtsExternal.h]::
  Declarations for RTS things referred to by {{{.hc}}} code.  (NOTE:
  also includes {{{RtsAPI.h}}} and {{{HsFFI.h}}}.

== Included into the RTS source code itself ==

Some of the header files here define important aspects of the
implementation of the runtime, such as {{{Closures.h}}} which defines
structures representing the layout of closures.

All such header files lie below {{{Rts.h}}} in the inclusion
hierarchy, in general all RTS sources {{{#include}}} {{{Rts.h}}}.
Pretty much all the header files in this directory fall into this
category.

 [http://darcs.haskell.org/includes/Rts.h Rts.h]::
 [http://darcs.haskell.org/includes/RtsTypes.h RtsTypes.h]::
  Types used in the RTS
 [http://darcs.haskell.org/includes/Constants.h Constants.h]::
  Build-time constants
 [http://darcs.haskell.org/includes/StgLdvProf.h StgLdvProf.h]::
 [http://darcs.haskell.org/includes/StgFun.h StgFun.h]::
 [http://darcs.haskell.org/includes/Closures.h Closures.h]::
  The layout of closures.
 [http://darcs.haskell.org/includes/Liveness.h Liveness.h]::
  macros for constructing RET_DYN liveness masks
 [http://darcs.haskell.org/includes/ClosureMacros.h ClosureMacros.h]::
 [http://darcs.haskell.org/includes/ClosureTypes.h ClosureTypes.h]::
 [http://darcs.haskell.org/includes/InfoTables.h InfoTables.h]::
  The layout of info tables.
 [http://darcs.haskell.org/includes/TSO.h TSO.h]::
  The structure of Thread State Objects.
 [http://darcs.haskell.org/includes/Updates.h Updates.h]::
  Macros for performing updates.
 [http://darcs.haskell.org/includes/GranSim.h GranSim.h]::
 [http://darcs.haskell.org/includes/Parallel.h Parallel.h]::
 [http://darcs.haskell.org/includes/SMP.h SMP.h]::
  Macros for multiprocessor support, eg. {{{cas()}}}.
 [http://darcs.haskell.org/includes/Block.h Block.h]::
  The block allocator, block descriptors, {{{Bdescr()}}}.
 [http://darcs.haskell.org/includes/StgTicky.h StgTicky.h]::
  Ticky-ticky profiling.
 [http://darcs.haskell.org/includes/Stable.h Stable.h]::
  Stable pointers, stable names.
 [http://darcs.haskell.org/includes/Hooks.h Hooks.h]::
  Hooks for changing RTS behaviour.
 [http://darcs.haskell.org/includes/Signals.h Signals.h]::
  The API for using Signals from Haskell.
 [http://darcs.haskell.org/includes/DNInvoke.h DNInvoke.h]::
  .NET stuff (bitrotted).

== Included into C-- code ==

 [http://darcs.haskell.org/includes/Cmm.h Cmm.h]::
  included into .cmm source only
 [http://darcs.haskell.org/includes/DerivedConstants.h
  DerivedConstants.h]::
  generated by mkDerivedConstants.c from other .h files.

  (Constants.h)
  (ClosureTypes.h)
  (StgFun.h)
  (MachRegs.h)
  (Liveness.h)  
  (Block.h)

== Included into various non-C source code ==

Some of these header files are {{{#included}}} into Haskell code or
C-- ({{{.cmm}}}) code, so that we can have one place for defining constants and
configuration settings.  Files in this category therefore must contain
{{{#defines}}} only, no C code or declarations.

The following headers are in this category:

 [http://darcs.haskell.org/includes/config.h config.h]::
 [http://darcs.haskell.org/includes/RtsConfig.h RtsConfig.h]::
 [http://darcs.haskell.org/includes/Constants.h Constants.h]::
 [http://darcs.haskell.org/includes/DerivedConstants.h DerivedConstants.h]::
 [http://darcs.haskell.org/includes/ClosureTypes.h ClosureTypes.h]::
 [http://darcs.haskell.org/includes/StgFun.h StgFun.h]::
 [http://darcs.haskell.org/includes/MachRegs.h MachRegs.h]::
 [http://darcs.haskell.org/includes/Liveness.h Liveness.h]::
 [http://darcs.haskell.org/includes/StgLdvProf.h StgLdvProf.h]::


== Miscellaneous == 

 [http://darcs.haskell.org/includes/Bytecodes.h Bytecodes.h]::
  Bytecode definitions for the interpreter
 [http://darcs.haskell.org/includes/ieee-flpt.h ieee-flpt.h]::
  ToDo: needed?
