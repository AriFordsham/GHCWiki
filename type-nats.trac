= Type Level Naturals =

This page collects information on how to work with type-level natural numbers, as implemented in the Haskell compiler GHC (ticket #4385).

== User's Guide ==

  * [wiki:TypeNats/Basics           Type-Level Naturals Basics]
  * [wiki:TypeNats/Naturals         Natural Numbers: From Values to Types]
  * [wiki:TypeNats/Operations       Type-Level Operations]


== Notes on Design ==

  * [wiki:TypeNats/AlternativeSingletons Alternative Design For Singletons]
  * [wiki:TypeNats/AvoidingPartialTypeFunctions Avoiding Partial Type Functions]
  * Naturals or Integers?
    
== Notes on the Implementation ==

  * [wiki:TypeNats/Implementation   Implementation of GHC.TypeNats]
  * [wiki:TypeNats/Axioms           Axioms for Natural Number Operators]
  * GHC Interaction Rules ([wiki:TypeNats/RuleNotation Notational Conventions])
    * [wiki:TypeNats/Interact1      Top-Level Interactions]
    * [wiki:TypeNats/Interact2      Simple Inert Interactions]
    * [wiki:TypeNats/LEQ            Solving (<=) Predicates]



== External links ==

  * The implementation resides in several repositories:
    * (GIT) Changes to GHC are on branch type-nats in: [git://code.galois.com/type-naturals/ghc.git]
    * (DARCS) Changes to the base library are at [http://code.galois.com/darcs/type-naturals/09-Jan-2011/base/]
    * (DARCS) Changes to the template-haskell library are at [http://code.galois.com/darcs/type-naturals/09-Jan-2011/template-haskell/]


  * More advanced example: https://github.com/yav/memory-arrays/tree/master