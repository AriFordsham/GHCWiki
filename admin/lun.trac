
= lun =

lun is a vm, running on lambda. It runs the community services.

== Accounts, Projects, etc. ==

See [http://community.haskell.org/admin/procedures/]

The tools mentioned there are in a darcs repository, which appears to be in various admin's home directories (try `locate create_account.sh`).  '''!ToDo: put this somewhere! '''

== VM ==

The config is in `lambda:/etc/libvirt/qemu/community.xml`, and the disk image
`/srv/community/vdisk.img`.

It's controlled by `virsh`, e.g.:
{{{
lambda$ sudo virsh list --all
 Id Name                 State
----------------------------------
  - community            shut off

lambda$ sudo virsh start community
Domain community started

lambda$ sudo virsh list --all
 Id Name                 State
----------------------------------
  2 community            running
}}}

To start it with a console, use:
{{{
lambda$ sudo virsh start community --console
}}}
or to connect to the console if it's already running:
{{{
lambda$ sudo virsh console community
}}}
and `Ctrl+]` to exit the console.

See the `virsh` manpage for more information.

== exim ==

The config is in `/etc/exim4/exim4.conf.template` with local changes delimited by:
{{{
# start lun local
...
# end lun local
}}}

After changing, run `/usr/sbin/update-exim4.conf` then `/etc/init.d/exim4 reload`.

== apache ==

The various sites are configured in `/etc/apache2/sites-available/*`. Symlinks in
`/etc/apache2/sites-enabled/` enable them.

Modules are similarly enabled by symlinks in `/etc/apache2/mods-enabled/`.

After changing anything, run `/etc/init.d/apache2 reload`.

== data ==

User data for service `foo` is generally in `/srv/foo`.

== mrtg ==

The mrtg config is in `/etc/mrtg.cfg`, some helpers are in `/srv/local/mrtg/`, and the output goes to `/var/www/mrtg`. The URL for it is http://lun.haskell.org/mrtg/

== Mailman ==

To restart the Mailman daemons:

{{{
/etc/init.d/mailman restart
}}}

The data is stored in `/var/lib/mailman`, and Mailman itself is in `/usr/lib/mailman`.

=== Web interface ===

The top-level list-of-lists is here: [http://projects.haskell.org/cgi-bin/mailman/listinfo].

The web interface is configured via `/etc/apache2/sites-available/projects`, and is currently

{{{
    Alias /pipermail/ /var/lib/mailman/archives/public/
    <Directory /var/lib/mailman/archives/public>
      Options +FollowSymLinks
    </Directory>

    ScriptAlias /cgi-bin/mailman/ /usr/lib/cgi-bin/mailman/
    <Directory "/usr/lib/cgi-bin/mailman">
        AllowOverride None
        Options ExecCGI -MultiViews +SymLinksIfOwnerMatch
        Order allow,deny
        Allow from all
    </Directory>

    Alias /images/mailman/ /usr/share/images/mailman/
    <Directory "/usr/share/images/mailman">
        AllowOverride None
        Order allow,deny
        Allow from all
    </Directory>
}}}

sample configuration is in `/etc/mailman/apache.conf`.

=== Adding a new list ===

Use the `newlist` command (see `man newlist`).  It is not necessary to add email aliases explicitly, this is all handled automatically by exim4.  

The exim configuration is in `/var/lib/exim4/config.autogenerated`, and includes the necessary Mailman configuration.

=== Archives ===

Archives are stored in `/var/lib/mailman/archives`.

== RT ==

The RT ticket system runs on a PostgreSQL backend on the `rt.haskell.org` domain.
That domain name is also the name of the RT instance.

At least the following Debian packages are installed:
 * rt3.6-clients
 * rt3.6-apache2
 * rt3.6-db-postgresql
 * request-tracker3.6

The unique identifier of the RT instance is `lun.haskell.org`.

Permissions are handled automatically by the RT packages, so the configuration file (including the database credentials) is readable by the `www-data` group.

The HTML site used by RT is in `/usr/share/request-tracker3.6/html`, which is the standard location.





