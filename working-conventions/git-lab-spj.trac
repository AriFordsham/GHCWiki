= The big picture =

* A '''merge request''' (MR) a set of changes that you want to have merged into HEAD.

* Every MR has an associated '''GIT branch'''.  It is this branch that will be ultimately merged into HEAD.

* An '''issue''' is GitLab's name for a Trac ticket.

* A '''review''' is a set of comments on a MR.  Always comment on MRs using a review, else the recipients get one email per comment, which is terrible.

= Workflows =

== Making a change to HEAD ==

You never commit diretly to HEAD.  Rather, follow this workflow.

* Create a branch, e.g. `wip/spj-wibbles` or `wip/T16224`:
{{{
$ git checkout -b wip/spj-wibbles
}}}

* Push it to the main repo (or your private repo)
{{{
$ git push origin wip/spj-wibbles
}}}

* Create a merge request.  [https://gitlab.haskell.org/ghc/ghc/wikis/home#opening-a-merge-request More details on this process are here].

* Working with your merge request: [https://gitlab.haskell.org/ghc/ghc/wikis/home#working-with-your-merge-request details here].

* As you review it, you can add further patches to the branch, and push them. The MR as seen in GitLab is always the tip of the branch.

* You can also rebase the patch on HEAD; then you need to force-push the branch
{{{
$ git push --force origin wip/spj-wibbles
}}}

* Before trying to commit to HEAD, you should tidy up the MR by squashing it into one (or more in unusual cases) patch, with a good commit message.

* Someone with commit right can then click "merge" on that MR.  Even then it has to pass CI before it lands in HEAD.

= GitLab notes =

== Gitlab tips ==

* In GitLab markup:
  * `#3553` links to issue 3553
  * `!883` links to merge request 883

* If you zoom your browser too much, stuff starts disappearing from the top menu bar; e.g. your picture and the settings linked to it. You have to zoom out.

* For projects you care about (e.g. https://gitlab.haskell.org/ghc/ghc), click on "Watch" (there's a little bell icon) about four rows down from the top. Then you'll get notifications of what changes.


== Merge requests ==

* The title and description of a MR do not form part of the Git repo's history.  Only the commit messages in the patches do.  So make sure that each patch has a good commit message!  The title and description of the MR signpost the readers through the review process.

* When commenting on a MR, use "Start review", not "Add comment".  The latter sends an email for each comment.  But a "review" is a set of comments, and hte recipients get one email for the whole thing.

* To see all merge requests, click on "Merge requests" ''in the left-hand nav column''.  The similar icon in the black menu bar at the top doesn't seem to do anything useful.

* To see more code surrounding a diff, there are some light grey "..." icons at the top and bottom of the line-number column. Click to show more.

== Reviewing comments ==

* Click on the Changes tab in the MR

* I recommend clicking on "Side-by-side" to get a better rendering.

* You also may want to go to your preferences page (accessible via the Settings button that appears under your picture at the very top-right of the screen -- Preferences is fourth from the bottom in the vertical navbar to the left of your settings screen) and choose a Fluid layout width.

* Back on the "Changes" tab of the MR above, you'll see a button labeled "0/49 discussions resolved". There is a small button with an arrow in it to the right of that. It warps you to the first unresolved discussion (i.e. comment I've made during my review)

* Comment if you like. Then, at the bottom-right of the windowette that contains the discussion, you'll see another button with a right-pointing arrow inside a speech bubble. Click that to go to the next unresolved discussion. In this way, the unresolved discussions can be navigated like a singly linked list.

== Transitioning an old repo ==

{{{
$ git remote set-url origin https://gitlab.haskell.org/ghc/ghc.git
$ git remote set-url --push origin git@gitlab.haskell.org:ghc/ghc
$ git submodule sync
}}}

