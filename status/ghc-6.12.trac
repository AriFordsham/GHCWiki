= Plans for 6.8.3 =

Here are our [http://www.haskell.org/pipermail/glasgow-haskell-users/2008-March/014467.html release plans for 6.8.3]

= Plans for GHC 6.10 =

We expect to release GHC 6.10 around ICFP 2008.  Here are the big items that we hope to include, along with who is primarily responsible for delivering these promises:

 * '''Extensible exceptions''', along the lines of Simon's paper [http://www.haskell.org/~simonmar/papers/ext-exceptions.pdf "An Extensible Dynamically-Typed Hierarchy of Exceptions"].  This is mainly a library change.  ''Simon Marlow''

 * '''Parallel garbage collection''' (see [http://research.microsoft.com/%7Esimonpj/papers/parallel-gc/index.htm Parallel generational-copying garbage collection with a block-structured heap]).  ''Simon Marlow''

 * '''Shared libraries''', as a result of Clemens Fruhwirth's Summer of Code project.  ''Simon Marlow''

 * '''[http://haskell.org/haskellwiki/GHC/Indexed_types Type families]''', fully working. ''Manuel Chakravarty and Simon PJ''

 * '''[http://haskell.org/haskellwiki/GHC/Data_Parallel_Haskell Nested data parallelism]''', in some form. ''Roman Leshchinskiy, Gabriele Keller, Manuel Chakravarty, Simon PJ''

 * '''Substantial changes to the [wiki:Commentary/Compiler/NewCodeGen back end]''' are likely, now that John Dias is here as an intern.n  ''John Dias, Simon PJ, Norman Ramsey''

 * Further '''library reorganisation''', but with more attention paid to backward compatibility. ''Ian Lynagh''
 
 * Better '''versioning''' to support separate compilation; perhaps checksums/fingerprints.


= Beyond 6.10 =

This is a list of things that are floating about in our minds for what to do beyond 6.10.  Nothing is decided, and these items vary wildly in their size.

 * '''Opaque interfaces''' (optionally), so you can upgrade a library without recompiling.

 * '''Parallelism'': better profiling tools.

 * '''Visual Haskell''': a Visual Studio plugin.  There is one, but it has suffered bit-rot.
 
 * '''GHC as a platform''' is the aspiration that it should be easy to plug extensions into GHC, and easy to use GHC to extend other software.

 * '''Static verification''' along the lines of Dana Xu's work.