= GHC Status Report (October 2017) =

(WIP)


== Major changes in GHC 8.4 ==

GHC 8.4 will continue focusing on stability and will include a number of internal refactorings.

=== Libraries, source language, and type system ===

-  Phase 2 of the Semigroup-Monoid Proposal


=== Compiler ===

-   A new syntax tree representation based on [[Trees That Grow]]. This will make it easier for external users to l

-   Improved support for cross-compilation

-   A new build system based on the `shake` library. This is the culmination of nearly two years of effort, replacing GHC's old Make-based build system.

-   Improved code generation via exit-point floating. This builds on the join-point work started in GHC 8.2, allowing more functions to be 

=== Runtime system ===

-   Significantly improved Windows support, with improvements in exception handling, linking, and crash diagnostics.

=== Miscellaneous ===

-   **Compiler Determinism.** GHC 8.0.2 is the first release of GHC which produces deterministic interface files. This helps consumers like Nix and caching build systems, and presents new opportunities for compile-time improvements. See the [[https://ghc.haskell.org/trac/ghc/wiki/DeterministicBuilds|Wiki]] for details.

== Development updates and acknowledgments ==

The past six months have seen a great deal of activity in GHC's infrastructure. This began in the summer on the heels of the 8.2.1 release, with a small group of developers reflecting on the various shortcomings of GHC's current Phabricator-based continuous integration scheme. This gradually grew from a hypothetical reimagining of GHC's continuous integration into a functional Jenkins configuration thanks to the help of Davean.  

The  GHC's continuous integration scheme. Davean's initial work in the Spring on moving GHC to the venerable Jenkins CI project, work which gradually progressed through the summer. This work

As always, if you are interested in contributing to any facet of GHC, be
the runtime system, type-checker, documentation, simplifier, or anything
in between, please come speak to us either on IRC (`#ghc` on
`irc.freeenode.net`) or `ghc-devs@haskell.org`. Happy Haskelling!

== Further reading ==

-   GHC website:

    <https://haskell.org/ghc/>

-   GHC users guide:

    <https://downloads.haskell.org/~ghc/master/users-guide/>

-   `ghc-devs` mailing list:

    <https://mail.haskell.org/mailman/listinfo/ghc-devs>
