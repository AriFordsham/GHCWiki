= GHC Status Report, October 2015 =

GHC development spurs on, with an exciting new announcement - the next release will be a super-major one, culminating in '''GHC 8.0'''... Lorem ipsum dolor sit amet, ...

== Major changes in GHC 8.0.1 ==

=== Already in HEAD ===

  - Support for [wiki:ExplicitCallStack/ImplicitLocations implicit parameters providing callstacks/source locations], allowing you to have a light-weight means of getting a call-stack in a Haskell application. (Phab:D861)

  - Improved optimization diagnostics. The compiler is now more liberal about issues warnings of potentially non-firing rewrite rules

  - Support for wildcards in data and type family instances (Phab:D1092)

  - Support for [wiki:InjectiveTypeFamilies Injective Type Families], which allows you to specify type families which are injective, i.e. a one-to-one relationship. (Phab:D202)

  - Support for [wiki:ApplicativeDo Applicative Do], allowing GHC to desugar do-notation to `Applicative` where possible. (Phab:D729)

  - Support for deriving the `Lift` typeclass (Phab:D1168)

  - Support for PowerPC 64-bit native code generation on Linux in big endian and little endian mode. (Phab:D629)

  - A beautiful new users guide, written in reStructured Text, and significantly improved output.

=== Incoming work, likely in time for 8.0

  - A new, type-indexed type representation, `data TTypeRep (a :: k)`. See [wiki:TypeableT].

  - Visible type application (Phab:D1138)

  - Support for reasoning about kind equalities, which gives promotion of GADTs to kinds, kind families, heterogeneous equality (kind-indexed GADTs), and `* :: *`. There is some discussion in [wiki:DependentHaskell/Phase1], but that's very low-level. I (Richard) have no good user-oriented write-up yet, but there shouldn't be much in the way of new syntax -- just fewer type errors. (Phab:D808)

  - Support for [wiki:StrictPragma Strict Haskell] including both the `StrictData` and `Strict` language extensions

  - Support for record pattern synonyms (Phab:D1152)

  - Implement the `MonadFail` proposal (#10751)

  - Support for [wiki:OverloadedRecordFields Overloaded Record Fields], allowing multiple uses of the same field name and a form of type-directed name resolution.

  - A huge improvement to pattern matching (including much better coverage of GADTs), based on the work of Simon PJ and Georgios Karachalias. For more details, see [http://research.microsoft.com/en-us/um/people/simonpj/papers/pattern-matching/gadtpm.pdf their paper].

  - Backpack is chugging along; we have a new user-facing syntax which allows multiple modules to be defined a single file, and are hoping to release at least the ability to publish multiple "units" in a single Cabal file.

  - Improved [wiki:DWARF DWARF based debugging support] from Peter Wortmann, Arash Rouhani, and Ben Gamari with backtraces from Haskell code.

  - An [wiki:ImprovedLLVMBackend Improved LLVM Backend] that ships with every major Tier 1 platform.

== After 8.0

  - Support for '''Type Signature Sections''', allowing you to write `(:: ty)` as a shorthand for `(\x -> x :: ty)`.
  - A (possible) overhaul of GHC's build system to use '''Shake''' instead of Make.
  - A `DEPRECATED` pragma for exports (#4879)

= References =

 - [ApiAnnotations] https://ghc.haskell.org/trac/ghc/wiki/ApiAnnotations
 - [ApplicativeDo] https://ghc.haskell.org/trac/ghc/wiki/ApplicativeDo
 - [Backpack] TODO: FIXME
 - [DistributedHaskell] https://ghc.haskell.org/trac/ghc/wiki/DistributedHaskell
 - [DWARF] https://ghc.haskell.org/trac/ghc/wiki/DWARF
 - [http://www.seas.upenn.edu/~eir/papers/2013/fckinds/fckinds-extended.pdf FCkinds] System FC with explicit kind equality, Weirich, Hsu, and Eisenberg, ICFP 13. http://www.seas.upenn.edu/~eir/papers/2013/fckinds/fckinds-extended.pdf
 - [GhcApi] https://ghc.haskell.org/trac/ghc/wiki/GhcApi
 - [wiki:ImprovedLLVMBackend [ImprovedLLVMBackend]] https://ghc.haskell.org/trac/ghc/wiki/ImprovedLLVMBackend
 - [InjectiveTypeFamilies] https://ghc.haskell.org/trac/ghc/wiki/InjectiveTypeFamilies
 - [KindEqualities] TODO: FIXME
 - [wiki:Records/OverloadedRecordFields] https://ghc.haskell.org/trac/ghc/wiki/Records/OverloadedRecordFields
 - [PartialTypeSignatures] https://ghc.haskell.org/trac/ghc/wiki/PartialTypeSignatures
 - [https://phabricator.haskell.org/D629 [PPC64-NCG]] https://phabricator.haskell.org/D629
 - [wiki:Prelude710 [Prelude710]] https://ghc.haskell.org/trac/ghc/wiki/prelude710
 - [wiki:Building/Shake [Shake]] https://ghc.haskell.org/trac/ghc/wiki/Building/Shake
 - [StaticPointers] https://ghc.haskell.org/trac/ghc/wiki/StaticPointers
 - [wiki:Plugins/TypeChecker [TCPlugins]] https://ghc.haskell.org/trac/ghc/wiki/Plugins/TypeChecker
 - [https://github.com/yav/type-nat-solver [TCSMT]] https://github.com/yav/type-nat-solver
 - [https://github.com/yav/type-nat-solver/raw/master/docs/paper.pdf [TCSMT_paper]] https://github.com/yav/type-nat-solver/raw/master/docs/paper.pdf
 - [wiki:Typeable Typeable] https://ghc.haskell.org/trac/ghc/wiki/Typeable
