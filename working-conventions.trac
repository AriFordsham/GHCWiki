= Working on GHC =

GHC is a BSD-licensed open-source project, and we welcome your help in making it better.
This page has pointers to information you'll need.

 * Subscribe to the [http://www.haskell.org/mailman/listinfo/ghc-devs ghc-devs mailing list].  This list is the place to discuss ongoing development of GHC. [http://www.haskell.org/mailman/listinfo/ghc-commits ghc-commits] gets an email for every commit that is made, and reports generated by the automated nightly builders go to [http://www.haskell.org/mailman/listinfo/ghc-builds ghc-builds]. Additionally, trac ticket discussions can be followed in [http://www.haskell.org/mailman/listinfo/ghc-tickets ghc-tickets]. These lists are high volume, so you probably want to at least filter them into separate folders/labels.

 * [/register Register an account] on this GHC Trac, so that you can edit pages.  Editing advice is in the "Wiki" links in the green sidebar on the left of every page

 * You may want to read the [wiki:Newcomers GHC Newcomers page], dedicated to helping newcomers tackle their first bugs.

 * Talk to other members of the [wiki:TeamGHC GHC Team].

 * Read the [wiki:ReadingList GHC reading list] and the [wiki:Commentary commentary on the source code].

 * Read the [wiki:Building building guide] (link always in the left hand margin) to learn how to build and test GHC.

 * If you have lots of Haskell installations, you may find Edsko's blog post [http://www.edsko.net/2013/02/10/comprehensive-haskell-sandboxes/ Comprehensive Haskell Sandboxes] useful.

The following pages guide you step-by-step through making a contribution:

 * [wiki:WorkingConventions/FixingBugs Fix a bug in GHC]. You can see all open bugs by clicking on "All bugs" in the left margin of this page.  At the top of the list is a filter you can use to refine your search.  Also check out the (currently stalled) [wiki:BugSweep GHC bug sweep].  Perhaps you can un-stall it.

 * [wiki:WorkingConventions/AddingFeatures Add a new feature to GHC]. You can see all open feature requests by clicking on "All bugs" in the left margin of this page.  At the top of the list is a filter you can use to refine your search.

 * [http://haskell.org/haskellwiki/Library_submissions Propose a change to the libraries]

== Working conventions ==

 * '''Using Git''': Our conventions and some useful tips for using git are here: [wiki:WorkingConventions/Git Using Git].

 * '''Releases and branches''': Our conventions for making releases and how the branches are managed: [wiki:WorkingConventions/Releases Releases]

 * '''Using the Bug Tracker''': see [wiki:WorkingConventions/BugTracker Using the Bug Tracker]

 * '''Coding style''': When you are editing GHC's source code, please follow our coding guidelines:
   * [wiki:Commentary/CodingStyle Coding style in the compiler]
   * [wiki:Commentary/Rts/Conventions Coding style in the runtime system]

 * '''Testing''': all patches that go into GHC must first pass ''validation'', which ensures that a basic build works and the ''regression test suite'' passes.
   * The policy on validating patches, and how to perform validation, is at: [wiki:TestingPatches Testing Patches].
   * Details about the regression test suite, and how to use it are at: [wiki:Building/RunningTests Running Tests].

 * '''Licensing''': make sure you are familiar with GHC's [wiki:Licensing].  Unless you say otherwise, we will assume that if you submit a contribution to GHC, then you intend to supply it to us under the same license as the existing code. However, we do not ask for copyright attribution; you retain copyright on any contributions you make, so feel free to add your copyright to the top of any file in which you make non-trivial changes.

== Old stuff ==
 * '''Using Darcs''': Our conventions and some useful tips for using darcs are here: [wiki:WorkingConventions/Darcs Using Darcs].